// 서비스 정의는 사용하는 프로토콜 버퍼의 버전(proto3) 지정으로 시작합니다.
syntax = "proto3";

// 패키지 이름은 프로토콜 메시지 타입 사이의 이름 충돌을 방지하고자 사용하며
// 코드 생성에도 사용합니다.
package ecommerce;

option go_package = "./";

// grpc 서비스의 서비스 인터페이스를 정의합니다.
service ProductInfo {
	// 제품 정보를 추가하고 제품 ID를 응답으로 반환하는 원격 메서드
	rpc addProduct(Product) returns (ProductID);
	// 제품 ID를 기반으로 제품 정보를 가져오는 원격 메서드
	rpc getProduct(ProductID) returns (Product);
}

// Product 정보의 메시지 형식/타입을 정의합니다.
message Product {
	// 메시지 바이너리 형식에서 필드를 식별하는 데 사용하는
	// 고유 필드 번호로 제품 ID에 대한 필드(이름 - 값)입니다.
	string id = 1;
	string name = 2;
	string description = 3;
	float price = 4;
}

message ProductID {
	string value = 1;
}